import { ChangeDetectionStrategy, Component, Inject, Input, ViewChild, ElementRef, PLATFORM_ID, } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
import { ADSENSE_TOKEN } from './adsense-config';
import * as ɵngcc0 from '@angular/core';

const _c0 = ["ins"];
export class AdsenseComponent {
    constructor(config, 
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    platform) {
        this.config = config;
        this.platform = platform;
        /** can be manually set if you need all ads on a page to have same id page-xxx */
        this.adRegion = 'page-' + Math.floor(Math.random() * 10000) + 1;
        /**
         * classes applied to the ins element
         */
        this.className = '';
    }
    ngOnInit() {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;
        const config = this.config;
        this.adClient = (_a = this.adClient) !== null && _a !== void 0 ? _a : config.adClient;
        this.adSlot = (_b = this.adSlot) !== null && _b !== void 0 ? _b : config.adSlot;
        this.adFormat = (_d = (_c = this.adFormat) !== null && _c !== void 0 ? _c : config.adFormat) !== null && _d !== void 0 ? _d : 'auto';
        this.display = (_f = (_e = this.display) !== null && _e !== void 0 ? _e : config.display) !== null && _f !== void 0 ? _f : 'block';
        this.width = (_g = this.width) !== null && _g !== void 0 ? _g : config.width;
        this.height = (_h = this.height) !== null && _h !== void 0 ? _h : config.height;
        this.layout = (_j = this.layout) !== null && _j !== void 0 ? _j : config.layout;
        this.layoutKey = (_k = this.layoutKey) !== null && _k !== void 0 ? _k : config.layoutKey;
        this.pageLevelAds = (_l = this.pageLevelAds) !== null && _l !== void 0 ? _l : config.pageLevelAds;
        this.adtest = (_m = this.adtest) !== null && _m !== void 0 ? _m : config.adtest;
        this.fullWidthResponsive = (_o = this.fullWidthResponsive) !== null && _o !== void 0 ? _o : config.fullWidthResponsive;
    }
    ngOnDestroy() {
        const iframe = this.ins.nativeElement.querySelector('iframe');
        if (iframe && iframe.contentWindow) {
            iframe.src = 'about:blank';
            iframe.remove();
        }
    }
    ngAfterViewInit() {
        if (isPlatformBrowser(this.platform)) {
            this.push();
        }
    }
    push() {
        const p = {};
        if (this.pageLevelAds) {
            p.google_ad_client = this.adClient;
            p.enable_page_level_ads = true;
        }
        if (window) {
            try {
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                (window.adsbygoogle = window.adsbygoogle || []).push(p);
            }
            catch (_a) {
                // pass
            }
        }
    }
}
AdsenseComponent.ɵfac = function AdsenseComponent_Factory(t) { return new (t || AdsenseComponent)(ɵngcc0.ɵɵdirectiveInject(ADSENSE_TOKEN), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID)); };
AdsenseComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AdsenseComponent, selectors: [["ng2-adsense"], ["ng-adsense"]], viewQuery: function AdsenseComponent_Query(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵstaticViewQuery(_c0, true, ElementRef);
    } if (rf & 2) {
        let _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ins = _t.first);
    } }, inputs: { adRegion: "adRegion", className: "className", adClient: "adClient", adSlot: "adSlot", adFormat: "adFormat", display: "display", width: "width", height: "height", layout: "layout", layoutKey: "layoutKey", pageLevelAds: "pageLevelAds", adtest: "adtest", fullWidthResponsive: "fullWidthResponsive" }, decls: 2, vars: 17, consts: [["ins", ""]], template: function AdsenseComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelement(0, "ins", null, 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMapInterpolate1("adsbygoogle ", ctx.className, "");
        ɵngcc0.ɵɵstyleProp("display", ctx.display)("width", ctx.width, "px")("height", ctx.height, "px");
        ɵngcc0.ɵɵattribute("data-ad-client", ctx.adClient)("data-ad-slot", ctx.adSlot)("data-ad-format", ctx.adFormat)("data-ad-region", ctx.adRegion)("data-layout", ctx.layout)("data-adtest", ctx.adtest)("data-layout-key", ctx.layoutKey)("data-full-width-responsive", ctx.fullWidthResponsive);
    } }, encapsulation: 2, changeDetection: 0 });
AdsenseComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [ADSENSE_TOKEN,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] }
];
AdsenseComponent.propDecorators = {
    adClient: [{ type: Input }],
    adSlot: [{ type: Input }],
    adFormat: [{ type: Input }],
    adRegion: [{ type: Input }],
    display: [{ type: Input }],
    width: [{ type: Input }],
    height: [{ type: Input }],
    layout: [{ type: Input }],
    layoutKey: [{ type: Input }],
    pageLevelAds: [{ type: Input }],
    adtest: [{ type: Input }],
    fullWidthResponsive: [{ type: Input }],
    className: [{ type: Input }],
    ins: [{ type: ViewChild, args: ['ins', { read: ElementRef, static: true },] }]
};
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(AdsenseComponent, [{
        type: Component,
        args: [{
                selector: 'ng2-adsense,ng-adsense',
                template: `
    <ins
      #ins
      class="adsbygoogle {{ className }}"
      [style.display]="display"
      [style.width.px]="width"
      [style.height.px]="height"
      [attr.data-ad-client]="adClient"
      [attr.data-ad-slot]="adSlot"
      [attr.data-ad-format]="adFormat"
      [attr.data-ad-region]="adRegion"
      [attr.data-layout]="layout"
      [attr.data-adtest]="adtest"
      [attr.data-layout-key]="layoutKey"
      [attr.data-full-width-responsive]="fullWidthResponsive"
    >
    </ins>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [ADSENSE_TOKEN]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [PLATFORM_ID]
            }] }]; }, { adRegion: [{
            type: Input
        }], className: [{
            type: Input
        }], adClient: [{
            type: Input
        }], adSlot: [{
            type: Input
        }], adFormat: [{
            type: Input
        }], display: [{
            type: Input
        }], width: [{
            type: Input
        }], height: [{
            type: Input
        }], layout: [{
            type: Input
        }], layoutKey: [{
            type: Input
        }], pageLevelAds: [{
            type: Input
        }], adtest: [{
            type: Input
        }], fullWidthResponsive: [{
            type: Input
        }], ins: [{
            type: ViewChild,
            args: ['ins', { read: ElementRef, static: true }]
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,